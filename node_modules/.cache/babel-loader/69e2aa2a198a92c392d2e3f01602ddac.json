{"remainingRequest":"/Users/mikey/hubgit/brightblock/brightblock-gaia-admin/node_modules/babel-loader/lib/index.js!/Users/mikey/hubgit/brightblock/brightblock-gaia-admin/node_modules/eslint-loader/index.js??ref--13-0!/Users/mikey/hubgit/brightblock/brightblock-gaia-admin/src/storage/userProfilesStore.js","dependencies":[{"path":"/Users/mikey/hubgit/brightblock/brightblock-gaia-admin/src/storage/userProfilesStore.js","mtime":1543581136000},{"path":"/Users/mikey/hubgit/brightblock/brightblock-gaia-admin/node_modules/cache-loader/dist/cjs.js","mtime":499162500000},{"path":"/Users/mikey/hubgit/brightblock/brightblock-gaia-admin/node_modules/babel-loader/lib/index.js","mtime":499162500000},{"path":"/Users/mikey/hubgit/brightblock/brightblock-gaia-admin/node_modules/eslint-loader/index.js","mtime":499162500000}],"contextDependencies":[],"result":["import \"core-js/modules/es6.array.find-index\";\n// myAccountStore.js\nimport userProfilesService from '@/services/userProfilesService';\nimport _ from 'lodash';\nvar userProfilesStore = {\n  namespaced: true,\n  state: {\n    userProfiles: []\n  },\n  getters: {\n    getProfile: function getProfile(state) {\n      return function (username) {\n        if (!username) {\n          return {};\n        }\n\n        var matches = state.userProfiles.filter(function (profile) {\n          return profile.username === username;\n        });\n\n        if (matches.length > 0) {\n          return matches[0];\n        } else {\n          // store.dispatch('userProfilesStore/fetchUserProfile', {username: username}, {root: true})\n          return {};\n        }\n      };\n    },\n    getGaiaUrl: function getGaiaUrl(state) {\n      return function (username) {\n        var gaiaUrl;\n        var profiles = state.userProfiles.filter(function (profile) {\n          return profile.username === username;\n        });\n\n        if (profiles.length > 0) {\n          var domain = location.origin;\n          var profile = profiles[0];\n\n          for (var key in profile.apps) {\n            if (key === domain) {\n              gaiaUrl = profile.apps[key];\n            }\n          }\n        }\n\n        return gaiaUrl;\n      };\n    },\n    getProfiles: function getProfiles(state) {\n      return state.userProfiles;\n    }\n  },\n  mutations: {\n    addUser: function addUser(state, userProfile) {\n      var index = _.findIndex(state.userProfiles, function (o) {\n        return o.username === userProfile.username;\n      });\n\n      if (index === -1) {\n        state.userProfiles.push(userProfile);\n      }\n    }\n  },\n  actions: {\n    fetchUserProfile: function fetchUserProfile(_ref, user) {\n      var commit = _ref.commit,\n          state = _ref.state;\n      return new Promise(function (resolve, reject) {\n        if (!user.username || user.username.length === 0 || user.username.indexOf('not given') > -1) {\n          resolve();\n        }\n\n        var userProfiles = state.userProfiles;\n\n        var index = _.findIndex(userProfiles, function (o) {\n          return o.username === user.username;\n        });\n\n        if (index === -1) {\n          userProfilesService.fetchUserProfile(user.username, function (userProfile) {\n            commit('addUser', userProfile);\n            resolve(userProfile);\n          }, function (error) {\n            console.log('Error fetching user profile for: ' + user.username, error);\n            resolve();\n          });\n        } else {\n          resolve(userProfiles[index]);\n        }\n      });\n    }\n  }\n};\nexport default userProfilesStore;",{"version":3,"sources":["/Users/mikey/hubgit/brightblock/brightblock-gaia-admin/src/storage/userProfilesStore.js"],"names":["userProfilesService","_","userProfilesStore","namespaced","state","userProfiles","getters","getProfile","username","matches","filter","profile","length","getGaiaUrl","gaiaUrl","profiles","domain","location","origin","key","apps","getProfiles","mutations","addUser","userProfile","index","findIndex","o","push","actions","fetchUserProfile","user","commit","Promise","resolve","reject","indexOf","error","console","log"],"mappings":"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","sourcesContent":["// myAccountStore.js\nimport userProfilesService from '@/services/userProfilesService'\nimport _ from 'lodash'\n\nconst userProfilesStore = {\n  namespaced: true,\n  state: {\n    userProfiles: [],\n  },\n  getters: {\n    getProfile: (state) => (username) => {\n      if (!username) {\n        return {}\n      }\n      let matches = state.userProfiles.filter(profile => profile.username === username)\n      if (matches.length > 0) {\n        return matches[0]\n      } else {\n        // store.dispatch('userProfilesStore/fetchUserProfile', {username: username}, {root: true})\n        return {}\n      }\n    },\n    getGaiaUrl: (state) => (username) => {\n      let gaiaUrl\n      let profiles = state.userProfiles.filter(profile => profile.username === username)\n      if (profiles.length > 0) {\n        let domain = location.origin\n        let profile = profiles[0]\n        for (var key in profile.apps) {\n          if (key === domain) {\n            gaiaUrl = profile.apps[key]\n          }\n        }\n      }\n      return gaiaUrl\n    },\n    getProfiles: (state) => {\n      return state.userProfiles\n    },\n  },\n  mutations: {\n    addUser (state, userProfile) {\n      let index = _.findIndex(state.userProfiles, function (o) {\n        return o.username === userProfile.username\n      })\n      if (index === -1) {\n        state.userProfiles.push(userProfile)\n      }\n    },\n  },\n  actions: {\n    fetchUserProfile ({ commit, state }, user) {\n      return new Promise((resolve, reject) => {\n        if (!user.username || user.username.length === 0 || user.username.indexOf('not given') > -1) {\n          resolve()\n        }\n        let userProfiles = state.userProfiles\n        let index = _.findIndex(userProfiles, function (o) {\n          return o.username === user.username\n        })\n        if (index === -1) {\n          userProfilesService.fetchUserProfile(user.username, function (userProfile) {\n            commit('addUser', userProfile)\n            resolve(userProfile)\n          },\n          function (error) {\n            console.log('Error fetching user profile for: ' + user.username, error)\n            resolve()\n          })\n        } else {\n          resolve(userProfiles[index])\n        }\n      })\n    },\n  }\n}\nexport default userProfilesStore\n"]}]}