{"remainingRequest":"/Users/mikey/hubgit/brightblock/brightblock-gaia-admin/node_modules/babel-loader/lib/index.js!/Users/mikey/hubgit/brightblock/brightblock-gaia-admin/node_modules/eslint-loader/index.js??ref--13-0!/Users/mikey/hubgit/brightblock/brightblock-gaia-admin/src/services/myAccountService.js","dependencies":[{"path":"/Users/mikey/hubgit/brightblock/brightblock-gaia-admin/src/services/myAccountService.js","mtime":1543581136000},{"path":"/Users/mikey/hubgit/brightblock/brightblock-gaia-admin/node_modules/cache-loader/dist/cjs.js","mtime":499162500000},{"path":"/Users/mikey/hubgit/brightblock/brightblock-gaia-admin/node_modules/babel-loader/lib/index.js","mtime":499162500000},{"path":"/Users/mikey/hubgit/brightblock/brightblock-gaia-admin/node_modules/eslint-loader/index.js","mtime":499162500000}],"contextDependencies":[],"result":["import \"core-js/modules/es6.function.name\";\nimport axios from 'axios';\nimport { Person, loadUserData, handlePendingSignIn, isSignInPending, isUserSignedIn, redirectToSignIn, decodeToken, hexStringToECPair, publicKeyToAddress, signUserOut } from 'blockstack';\nimport store from '@/storage/store';\nvar myAccountService = {\n  myProfile: function myProfile() {\n    var myProfile = {\n      loggedIn: false\n    };\n    var account = loadUserData();\n\n    if (account) {\n      var authResponseToken = account.authResponseToken;\n      var privateKey = account.appPrivateKey + '01'; // console.log('Private Key: ' + privateKey)\n\n      privateKey = hexStringToECPair(privateKey).toWIF(); // console.log('Private Key WIF: ' + privateKey)\n\n      var decodedToken = decodeToken(authResponseToken);\n      var publicKey = decodedToken.payload.public_keys[0]; // publicKey = hexStringToECPair(publicKey).toWIF()\n      // console.log('Public Key: ' + publicKey)\n      // console.log('Public Address: ' + publicKeyToAddress(publicKey))\n\n      var showAdmin = account.username === 'mike.personal.id' || account.username.indexOf('brightblock') > -1 || account.username.indexOf('antonio') > -1;\n      var person = new Person(account.profile);\n      myProfile = {\n        loggedIn: true,\n        showAdmin: showAdmin,\n        name: person.name(),\n        description: person.description(),\n        avatarUrl: person.avatarUrl(),\n        username: account.username,\n        hubUrl: account.hubUrl,\n        apps: account.profile.apps,\n        privateKey: privateKey,\n        publicKey: publicKey,\n        publicAddress: publicKeyToAddress(publicKey),\n        authResponseToken: account.authResponseToken\n      };\n    }\n\n    return myProfile;\n  },\n  handlePending: function handlePending() {\n    handlePendingSignIn().then(function (myProfile) {\n      store.dispatch('myAccountStore/fetchMyAccount');\n      store.dispatch('myArtworksStore/fetchMyArtworks');\n    });\n  },\n  isPending: function isPending() {\n    return isSignInPending();\n  },\n  canLogIn: function canLogIn() {\n    return new Promise(function (resolve) {\n      axios.get('http://localhost:6270/v1/ping').then(function (response) {\n        resolve(response.data.status === 'alive');\n      }).catch(function (e) {\n        console.log('No one listening on 6270?');\n        resolve(true);\n      });\n    });\n  },\n  isLoggedIn: function isLoggedIn() {\n    if (isUserSignedIn()) {\n      store.dispatch('myAccountStore/fetchMyAccount');\n      return true;\n    } else if (isSignInPending()) {\n      myAccountService.handlePending();\n      return false;\n    } else {\n      return false;\n    }\n  },\n  logout: function logout(event) {\n    signUserOut(window.location.origin);\n    store.dispatch('myAccountStore/fetchMyAccount');\n  },\n  loginMultiPlayer: function loginMultiPlayer(event) {\n    if (!this.isLoggedIn()) {\n      var origin = window.location.origin;\n      redirectToSignIn(origin, origin + '/manifest.json', ['store_write', 'publish_data']);\n    }\n  },\n  login: function login(event) {\n    if (!this.isLoggedIn()) {\n      redirectToSignIn();\n      store.dispatch('myAccountStore/fetchMyAccount');\n    }\n  }\n};\nexport default myAccountService;",{"version":3,"sources":["/Users/mikey/hubgit/brightblock/brightblock-gaia-admin/src/services/myAccountService.js"],"names":["axios","Person","loadUserData","handlePendingSignIn","isSignInPending","isUserSignedIn","redirectToSignIn","decodeToken","hexStringToECPair","publicKeyToAddress","signUserOut","store","myAccountService","myProfile","loggedIn","account","authResponseToken","privateKey","appPrivateKey","toWIF","decodedToken","publicKey","payload","public_keys","showAdmin","username","indexOf","person","profile","name","description","avatarUrl","hubUrl","apps","publicAddress","handlePending","then","dispatch","isPending","canLogIn","Promise","resolve","get","response","data","status","catch","e","console","log","isLoggedIn","logout","event","window","location","origin","loginMultiPlayer","login"],"mappings":"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","sourcesContent":["import axios from 'axios'\nimport {\n  Person,\n  loadUserData,\n  handlePendingSignIn,\n  isSignInPending,\n  isUserSignedIn,\n  redirectToSignIn,\n  decodeToken,\n  hexStringToECPair,\n  publicKeyToAddress,\n  signUserOut\n} from 'blockstack'\nimport store from '@/storage/store'\n\nconst myAccountService = {\n  myProfile: function () {\n    let myProfile = {\n      loggedIn: false\n    }\n    let account = loadUserData()\n    if (account) {\n      let authResponseToken = account.authResponseToken\n      var privateKey = account.appPrivateKey + '01'\n      // console.log('Private Key: ' + privateKey)\n      privateKey = hexStringToECPair(privateKey).toWIF()\n      // console.log('Private Key WIF: ' + privateKey)\n      let decodedToken = decodeToken(authResponseToken)\n      let publicKey = decodedToken.payload.public_keys[0]\n      // publicKey = hexStringToECPair(publicKey).toWIF()\n      // console.log('Public Key: ' + publicKey)\n      // console.log('Public Address: ' + publicKeyToAddress(publicKey))\n      let showAdmin = account.username === 'mike.personal.id' || account.username.indexOf('brightblock') > -1 || account.username.indexOf('antonio') > -1\n      let person = new Person(account.profile)\n      myProfile = {\n        loggedIn: true,\n        showAdmin: showAdmin,\n        name: person.name(),\n        description: person.description(),\n        avatarUrl: person.avatarUrl(),\n        username: account.username,\n        hubUrl: account.hubUrl,\n        apps: account.profile.apps,\n        privateKey: privateKey,\n        publicKey: publicKey,\n        publicAddress: publicKeyToAddress(publicKey),\n        authResponseToken: account.authResponseToken,\n      }\n    }\n    return myProfile\n  },\n  handlePending: function () {\n    handlePendingSignIn().then(function (myProfile) {\n      store.dispatch('myAccountStore/fetchMyAccount')\n      store.dispatch('myArtworksStore/fetchMyArtworks')\n    })\n  },\n  isPending: function () {\n    return isSignInPending()\n  },\n  canLogIn: function () {\n    return new Promise(resolve => {\n      axios.get('http://localhost:6270/v1/ping')\n        .then(response => {\n          resolve(response.data.status === 'alive')\n        })\n        .catch(e => {\n          console.log('No one listening on 6270?')\n          resolve(true)\n        })\n    })\n  },\n  isLoggedIn: function () {\n    if (isUserSignedIn()) {\n      store.dispatch('myAccountStore/fetchMyAccount')\n      return true\n    } else if (isSignInPending()) {\n      myAccountService.handlePending()\n      return false\n    } else {\n      return false\n    }\n  },\n  logout: function (event) {\n    signUserOut(window.location.origin)\n    store.dispatch('myAccountStore/fetchMyAccount')\n  },\n  loginMultiPlayer: function (event) {\n    if (!this.isLoggedIn()) {\n      const origin = window.location.origin\n      redirectToSignIn(origin, origin + '/manifest.json', ['store_write', 'publish_data'])\n    }\n  },\n  login: function (event) {\n    if (!this.isLoggedIn()) {\n      redirectToSignIn()\n      store.dispatch('myAccountStore/fetchMyAccount')\n    }\n  }\n}\nexport default myAccountService\n"]}]}