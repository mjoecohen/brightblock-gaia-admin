{"remainingRequest":"/Users/mikey/hubgit/brightblock/brightblock-gaia-admin/node_modules/vue-loader/lib/index.js??vue-loader-options!/Users/mikey/hubgit/brightblock/brightblock-gaia-admin/src/components/admin/AdminSettings.vue?vue&type=script&lang=js&","dependencies":[{"path":"/Users/mikey/hubgit/brightblock/brightblock-gaia-admin/src/components/admin/AdminSettings.vue","mtime":1543937031720},{"path":"/Users/mikey/hubgit/brightblock/brightblock-gaia-admin/node_modules/cache-loader/dist/cjs.js","mtime":499162500000},{"path":"/Users/mikey/hubgit/brightblock/brightblock-gaia-admin/node_modules/babel-loader/lib/index.js","mtime":499162500000},{"path":"/Users/mikey/hubgit/brightblock/brightblock-gaia-admin/node_modules/cache-loader/dist/cjs.js","mtime":499162500000},{"path":"/Users/mikey/hubgit/brightblock/brightblock-gaia-admin/node_modules/vue-loader/lib/index.js","mtime":499162500000}],"contextDependencies":[],"result":["//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n\nimport axios from \"axios\";\n\nconst gaiaAuthToken =\n  \"v1:eyJ0eXAiOiJKV1QiLCJhbGciOiJFUzI1NksifQ.eyJnYWlhQ2hhbGxlbmdlIjoiW1wiZ2FpYWh1YlwiLFwiMjAxOFwiLFwiXCIsXCJibG9ja3N0YWNrX3N0b3JhZ2VfcGxlYXNlX3NpZ25cIl0iLCJodWJVcmwiOiJodHRwczovL2dhaWEuYnJpZ2h0YmxvY2sub3JnIiwiaXNzIjoiMDIyNmVlZjk2MDI4YWYwMTQ1M2YwYzk2NGE0MTcxMGEzZDgwNGQ3MGY2MTgyOTZkMGVjMzczY2MxMGFhYjEwNjM4Iiwic2FsdCI6ImRmODk3YWRkMjVjZDBiNjE1MjUxZjViMmY1OGI3ODllIn0.FoeOdvMqWFU9tqVtToUHE7axjsA0YK_YArhFCXQ0eytRvJbkeW2S1h2V_iQF2311wq322CaPoIRZIxC6Rgqccg\";\n\nexport default {\n  data() {\n    return {\n      gaiaHubUrl: \"\",\n      address: \"\",\n      gaiaListResult: [],\n      gaiaResult: null,\n      gaiaStoreResult: null,\n      gaiaFileResult: null\n    };\n  },\n  created() {\n    let hubConfig = localStorage.getItem(\"blockstack-gaia-hub-config\");\n    let hubJSON = JSON.parse(hubConfig);\n    this.address = hubJSON.address;\n    this.gaiaHubUrl = this.$store.state.constants.gaiaHubUrl;\n  },\n  methods: {\n    toggleDebugMode() {\n      this.$store.commit(\"debugMode\");\n    },\n    listFilesUrl(file) {\n      return this.gaiaHubUrl + \"/\" + this.address + \"/\" + file;\n    },\n    gaiaHubInfoCheck() {\n      this.gaiaFileResult = null;\n      this.gaiaListResult = [];\n      this.gaiaResult = null;\n      let callInfo = {\n        method: \"get\",\n        url: this.gaiaHubUrl + \"/hub_info\",\n        headers: {\n          \"Content-Type\": \"application/json\",\n          Authorization: \"Bearer \" + gaiaAuthToken\n        }\n      };\n      axios\n        .get(callInfo.url, { headers: callInfo.headers })\n        .then(response => {\n          this.gaiaResult = response.data;\n        })\n        .catch(e => {\n          this.gaiaResult = e.message;\n        });\n    },\n    gaiaListFilesCheck() {\n      this.gaiaFileResult = null;\n      this.gaiaListResult = [];\n      this.gaiaResult = null;\n      let callInfo = {\n        method: \"get\",\n        url: this.gaiaHubUrl + \"/list-files/\" + this.address,\n        headers: {\n          \"Content-Type\": \"application/json\",\n          Authorization: \"Bearer \" + gaiaAuthToken\n        }\n      };\n      let $self = this;\n      axios\n        .get(callInfo.url, { headers: callInfo.headers })\n        .then(response => {\n          $self.gaiaListResult = response.data;\n        })\n        .catch(e => {\n          $self.gaiaResult = e.message;\n        });\n    },\n    gaiaStoreCheck() {\n      this.gaiaResult = null;\n      this.gaiaFileResult = null;\n      let data = {\n        test: \"test storing a file in aws s3 bucket via gaia\",\n        random: Math.random().toString(36)\n      };\n      axios({\n        method: \"post\",\n        url:\n          this.gaiaHubUrl + \"/store/\" + this.address + \"/gaia_store_test.json\",\n        data: data,\n        headers: {\n          \"Content-Type\": \"application/json\",\n          Authorization: \"Bearer \" + gaiaAuthToken\n        }\n      })\n        .then(response => {\n          this.gaiaStoreResult = response.data;\n          this.gaiaGetFile(\"gaia_store_test.json\");\n        })\n        .catch(e => {\n          this.gaiaStoreResult = e.message;\n        });\n    },\n    gaiaGetFile(file) {\n      this.gaiaResult = null;\n      let callInfo = {\n        method: \"get\",\n        url: this.gaiaHubUrl + \"/\" + this.address + \"/\" + file,\n        headers: {\n          \"Content-Type\": \"application/json\",\n          Authorization: \"Bearer \" + gaiaAuthToken\n        }\n      };\n      let $self = this;\n      axios\n        .get(callInfo.url, { headers: callInfo.headers })\n        .then(response => {\n          $self.gaiaFileResult = response.data;\n        })\n        .catch(e => {\n          $self.gaiaFileResult = e.message;\n        });\n    }\n  },\n  computed: {\n    debugMode() {\n      let debugMode = this.$store.getters[\"isDebugMode\"];\n      return debugMode;\n    },\n    constants() {\n      return this.$store.state.constants;\n    }\n  },\n  components: {}\n};\n",{"version":3,"sources":["AdminSettings.vue"],"names":[],"mappings":";;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;AAsfile":"AdminSettings.vue","sourceRoot":"src/components/admin","sourcesContent":["<template>\n  <div class=\"col-sm-10\">\n    <h5 class=\"\">Main Settings</h5>\n    <div class=\"row\">\n      <div class=\"col-sm-2\">Domain:</div>\n      <div class=\"col-sm-10\">{{ constants.domain }}</div>\n    </div>\n    <div class=\"row\">\n      <div class=\"col-sm-2\">Environment:</div>\n      <div class=\"col-sm-10\">{{ constants.environment }}</div>\n    </div>\n\n    <h5 class=\"mt-3\">API Settings</h5>\n    <div class=\"row\">\n      <div class=\"col-sm-2\">Shape Shift:</div>\n      <div class=\"col-sm-10\">{{ constants.shapeShiftUrl }}</div>\n    </div>\n    <div class=\"row\">\n      <div class=\"col-sm-2\">Search:</div>\n      <div class=\"col-sm-10\">{{ constants.searchUrl }}</div>\n    </div>\n    <div class=\"row\">\n      <div class=\"col-sm-2\">Eth Gateway:</div>\n      <div class=\"col-sm-10\">{{ constants.ethGatewayUrl }}</div>\n    </div>\n\n    <h5 class=\"mt-3\">Debug Settings</h5>\n    <div class=\"row\">\n      <div class=\"col-sm-2\">Debug Mode:</div>\n      <div class=\"col-sm-10\">\n        <a\n          href=\"#\"\n          class=\"badge badge-primary white\"\n          @click.prevent=\"toggleDebugMode\"\n          >{{ debugMode }}</a\n        >\n      </div>\n    </div>\n\n    <h5 class=\"mt-3\">Gaia Test Settings</h5>\n    <div class=\"row\">\n      <div class=\"col-sm-2\"></div>\n      <div class=\"col-sm-10\">\n        <a\n          href=\"#\"\n          class=\"badge badge-primary white\"\n          @click.prevent=\"gaiaHubInfoCheck\"\n          >Check Hub Info</a\n        >\n        <a\n          href=\"#\"\n          class=\"badge badge-primary white\"\n          @click.prevent=\"gaiaListFilesCheck\"\n          >Check List Files</a\n        >\n        <a\n          href=\"#\"\n          class=\"badge badge-primary white\"\n          @click.prevent=\"gaiaStoreCheck\"\n          >Store Random File</a\n        >\n      </div>\n    </div>\n    <div class=\"row\" v-if=\"gaiaResult\">\n      <div class=\"col-sm-2\"></div>\n      <div class=\"col-sm-10\">{{ gaiaResult }}</div>\n    </div>\n    <div class=\"row\">\n      <div class=\"col-sm-2\"></div>\n      <div class=\"col-sm-10\">\n        <ul>\n          <li v-for=\"(index, file) in gaiaListResult\" :key=\"index\">\n            {{ file }}:\n            <a href=\"#\" @click.prevent=\"gaiaGetFile(index)\">{{ index }}</a>\n          </li>\n        </ul>\n      </div>\n    </div>\n    <div class=\"row\" v-if=\"gaiaFileResult\">\n      <div class=\"col-sm-2\"></div>\n      <div class=\"col-sm-10\">{{ gaiaFileResult }}</div>\n    </div>\n  </div>\n</template>\n\n<script>\nimport axios from \"axios\";\n\nconst gaiaAuthToken =\n  \"v1:eyJ0eXAiOiJKV1QiLCJhbGciOiJFUzI1NksifQ.eyJnYWlhQ2hhbGxlbmdlIjoiW1wiZ2FpYWh1YlwiLFwiMjAxOFwiLFwiXCIsXCJibG9ja3N0YWNrX3N0b3JhZ2VfcGxlYXNlX3NpZ25cIl0iLCJodWJVcmwiOiJodHRwczovL2dhaWEuYnJpZ2h0YmxvY2sub3JnIiwiaXNzIjoiMDIyNmVlZjk2MDI4YWYwMTQ1M2YwYzk2NGE0MTcxMGEzZDgwNGQ3MGY2MTgyOTZkMGVjMzczY2MxMGFhYjEwNjM4Iiwic2FsdCI6ImRmODk3YWRkMjVjZDBiNjE1MjUxZjViMmY1OGI3ODllIn0.FoeOdvMqWFU9tqVtToUHE7axjsA0YK_YArhFCXQ0eytRvJbkeW2S1h2V_iQF2311wq322CaPoIRZIxC6Rgqccg\";\n\nexport default {\n  data() {\n    return {\n      gaiaHubUrl: \"\",\n      address: \"\",\n      gaiaListResult: [],\n      gaiaResult: null,\n      gaiaStoreResult: null,\n      gaiaFileResult: null\n    };\n  },\n  created() {\n    let hubConfig = localStorage.getItem(\"blockstack-gaia-hub-config\");\n    let hubJSON = JSON.parse(hubConfig);\n    this.address = hubJSON.address;\n    this.gaiaHubUrl = this.$store.state.constants.gaiaHubUrl;\n  },\n  methods: {\n    toggleDebugMode() {\n      this.$store.commit(\"debugMode\");\n    },\n    listFilesUrl(file) {\n      return this.gaiaHubUrl + \"/\" + this.address + \"/\" + file;\n    },\n    gaiaHubInfoCheck() {\n      this.gaiaFileResult = null;\n      this.gaiaListResult = [];\n      this.gaiaResult = null;\n      let callInfo = {\n        method: \"get\",\n        url: this.gaiaHubUrl + \"/hub_info\",\n        headers: {\n          \"Content-Type\": \"application/json\",\n          Authorization: \"Bearer \" + gaiaAuthToken\n        }\n      };\n      axios\n        .get(callInfo.url, { headers: callInfo.headers })\n        .then(response => {\n          this.gaiaResult = response.data;\n        })\n        .catch(e => {\n          this.gaiaResult = e.message;\n        });\n    },\n    gaiaListFilesCheck() {\n      this.gaiaFileResult = null;\n      this.gaiaListResult = [];\n      this.gaiaResult = null;\n      let callInfo = {\n        method: \"get\",\n        url: this.gaiaHubUrl + \"/list-files/\" + this.address,\n        headers: {\n          \"Content-Type\": \"application/json\",\n          Authorization: \"Bearer \" + gaiaAuthToken\n        }\n      };\n      let $self = this;\n      axios\n        .get(callInfo.url, { headers: callInfo.headers })\n        .then(response => {\n          $self.gaiaListResult = response.data;\n        })\n        .catch(e => {\n          $self.gaiaResult = e.message;\n        });\n    },\n    gaiaStoreCheck() {\n      this.gaiaResult = null;\n      this.gaiaFileResult = null;\n      let data = {\n        test: \"test storing a file in aws s3 bucket via gaia\",\n        random: Math.random().toString(36)\n      };\n      axios({\n        method: \"post\",\n        url:\n          this.gaiaHubUrl + \"/store/\" + this.address + \"/gaia_store_test.json\",\n        data: data,\n        headers: {\n          \"Content-Type\": \"application/json\",\n          Authorization: \"Bearer \" + gaiaAuthToken\n        }\n      })\n        .then(response => {\n          this.gaiaStoreResult = response.data;\n          this.gaiaGetFile(\"gaia_store_test.json\");\n        })\n        .catch(e => {\n          this.gaiaStoreResult = e.message;\n        });\n    },\n    gaiaGetFile(file) {\n      this.gaiaResult = null;\n      let callInfo = {\n        method: \"get\",\n        url: this.gaiaHubUrl + \"/\" + this.address + \"/\" + file,\n        headers: {\n          \"Content-Type\": \"application/json\",\n          Authorization: \"Bearer \" + gaiaAuthToken\n        }\n      };\n      let $self = this;\n      axios\n        .get(callInfo.url, { headers: callInfo.headers })\n        .then(response => {\n          $self.gaiaFileResult = response.data;\n        })\n        .catch(e => {\n          $self.gaiaFileResult = e.message;\n        });\n    }\n  },\n  computed: {\n    debugMode() {\n      let debugMode = this.$store.getters[\"isDebugMode\"];\n      return debugMode;\n    },\n    constants() {\n      return this.$store.state.constants;\n    }\n  },\n  components: {}\n};\n</script>\n"]}]}